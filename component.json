{
    "title": "sevDesk Order API",
    "description": "\r\n# General information\r\nWelcome to our Order API!<br>\r\nYou can use it to manage orders in your sevDesk account.\r\n\r\n# Cross-Origin Resource Sharing\r\nThis API features Cross-Origin Resource Sharing (CORS).<br>\r\nIt enables cross-domain communication from the browser.<br>\r\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\r\n\r\n# Embedding resources\r\nWhen retrieving resources by using this API, you might encounter nested resources in the resources you requested.<br>\r\nFor example, an invoice always contains a contact, of which you can see the ID and the object name.<br>\r\nThis API gives you the possibility to embed these resources completely into the resources you originally requested.<br>\r\nTaking our invoice example, this would mean, that you would not only see the ID and object name of a contact, but rather the complete contact resource.\r\n\r\nTo embed resources, all you need to do is to add the query parameter 'embed' to your GET request.<br>\r\nAs values, you can provide the name of the nested resource.<br>\r\nMultiple nested resources are also possible by providing multiple names, separated by a comma.\r\n",
    "docsUrl": "https://5677.extern.sevdesk.dev/apiOverview/index.html#/",
    "url": "https://raw.githubusercontent.com/openintegrationhub/sevdesk-order-component/master/lib/spec.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://my.sevdesk.de/api/v1 - Our main application instance which most of our customers work with",
                    "https://my.pebesmart.ch/api/v1 - Our swiss application instance, hosted and maintained by smart seven AG",
                    "http://sevdesk.local/api/v1 - sevDesk internal local instance",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_api_key": {
                "label": "Authorization (api_key)",
                "viewClass": "TextFieldView"
            }
        }
    },
    "triggers": {
        "lookup": {
            "main": "./lib/lookups/lookup.js",
            "title": "Function to run a lookup",
            "description": "Function to call an internal trigger or action"
        },
        "getOrders": {
            "main": "./lib/triggers/trigger.js",
            "title": "Retrieve orders",
            "description": "There are a multitude of parameter which can be used to filter. A few of them are attached but\r\n    for a complete list please check out <a href='https://5677.extern.sevdesk.dev/apiOverview/index.html#/doc-orders#filtering'>this</a> list",
            "callParams": {
                "pathName": "/Order",
                "method": "get"
            },
            "metadata": {
                "in": "./lib/schemas/getOrders.in.json",
                "out": "./lib/schemas/getOrders.out.json"
            }
        },
        "getOrderPositions": {
            "main": "./lib/triggers/trigger.js",
            "title": "Retrieve order positions",
            "description": "Retrieve all order positions depending on the filters defined in the query.",
            "callParams": {
                "pathName": "/OrderPos",
                "method": "get"
            },
            "metadata": {
                "in": "./lib/schemas/getOrderPositions.in.json",
                "out": "./lib/schemas/getOrderPositions.out.json"
            }
        }
    },
    "actions": {
        "getOrderById": {
            "main": "./lib/actions/action.js",
            "title": "Find order by ID",
            "description": "Returns a single order",
            "callParams": {
                "pathName": "/Order/{orderId}",
                "method": "get"
            },
            "metadata": {
                "in": "./lib/schemas/getOrderById.in.json",
                "out": "./lib/schemas/getOrderById.out.json"
            }
        },
        "deleteOrder": {
            "main": "./lib/actions/action.js",
            "title": "Deletes an order",
            "callParams": {
                "pathName": "/Order/{orderId}/delete",
                "method": "delete"
            },
            "metadata": {
                "in": "./lib/schemas/deleteOrder.in.json",
                "out": "./lib/schemas/deleteOrder.out.json"
            }
        },
        "updateOrder": {
            "main": "./lib/actions/action.js",
            "title": "Update an existing order",
            "description": "Update an order",
            "callParams": {
                "pathName": "/Order/{orderId}",
                "method": "put",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/updateOrder.in.json",
                "out": "./lib/schemas/updateOrder.out.json"
            }
        },
        "createOrder": {
            "main": "./lib/actions/action.js",
            "title": "Create a new order",
            "description": "Creates an order to which positions can be added later.",
            "callParams": {
                "pathName": "/Order",
                "method": "post",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/createOrder.in.json",
                "out": "./lib/schemas/createOrder.out.json"
            }
        },
        "createOrderPos": {
            "main": "./lib/actions/action.js",
            "title": "Create a new order position",
            "description": "Creates an order position for an order.",
            "callParams": {
                "pathName": "/OrderPos",
                "method": "post",
                "requestContentType": "json"
            },
            "metadata": {
                "in": "./lib/schemas/createOrderPos.in.json",
                "out": "./lib/schemas/createOrderPos.out.json"
            }
        }
    }
}